(require list)
(require table)
(require dotnet)
(require text)

(dnuse (System System.Text System.Collections.Generic NetLisp.Data NetLisp.Structs NetLisp.Runtime NetLisp.Text NetLisp.Text.CodeAnalysis nlshell) (
  (let (
    pathautocomplete (tbnew)
    editor ()
    indexinlist ()
    stringtokfrompositioninlist ()
    updateautocompletesource ()
    autocompletecache ()
    escapedpostounescapedpos ()
    List<LispToken>T (dngenerict List`1 LispToken)
    CharacterMap<TokenClass>T (dngenerict CharacterMap`1 CharacterMapTokenClass)
    CharacterRange<TokenClass>T (dngenerict CharacterMap`1+CharacterRange CharacterMapTokenClass)
    ) (
    (setq escapedpostounescapedpos (lambda (str escapedpos) (
      (let (
        unescapedpos 0
        i 0
        escapenext false
        ) (
        (txiterc str (lambda (char) (
          (if (< i escapedpos)
            (
              (if escapenext
                (setq escapenext false)
                (
                  (setq unescapedpos (+ unescapedpos 1))
                  (if (= char "\\")
                    (setq escapenext true)
                    ()
                    )
                  )
                )
              (setq i (+ i 1))
              )
            (return-from txiterc)
          )
          )))
        (if (or escapenext (< escapedpos 0))
          (values -1)
          (values unescapedpos)
          )
        ))
      )))
    (dnuset List<LispToken>T List<LispToken> (
      (dnuset CharacterMap<TokenClass>T CharacterMap<TokenClass> (
        (dnuset CharacterRange<TokenClass>T CharacterRange<TokenClass> (
          (setq indexinlist (lambda (items pos charmap) (
            (let (
              buffer (ConsoleLispEditor.Buffer editor)
              ind 0
              posclass (CharacterRange<TokenClass>.Classification (CharacterMap<TokenClass>.Item charmap pos))
              isend (and (not (= posclass CharacterMapTokenClass.String))
                         (not (= posclass CharacterMapTokenClass.StringEscaped))
                         (= (Char.ToString (StringBuilder.Chars buffer (- pos 1))) " "))
              ) (
              (lsiter items (lambda (item) (
                (let (
                  itempos (SourceReference.Position (LispToken.SourceLocation item))
                  ) (
                  (if (> itempos (- pos 1))
                    (return-from lsiter)
                    (setq ind (+ ind 1))
                    )
                  ))
                )))
              (let (posresult (if (> ind 0) (- ind 1) ind)) (
                (if isend
                  (+ posresult 1)
                  (values posresult)
                  )
                ))
              ))
            )))
          (setq stringtokfrompositioninlist (lambda (listitems pos charmap) (
            (let (
              items (List<LispToken>.ToArray listitems)
              range (CharacterMap<TokenClass>.Item charmap pos)
              rangestart (CharacterRange<TokenClass>.Start range)
              class (CharacterRange<TokenClass>.Classification range)
              ) (
              (if (or (= class CharacterMapTokenClass.String) (= class CharacterMapTokenClass.StringEscaped))
                (let (
                  itemind (indexinlist items pos charmap)
                  item (lsn items itemind)
                  stringtok? (= (LispToken.Type item) LispDataType.String)
                  ) (
                  (if stringtok?
                    (lsnew item itemind)
                    (lsnew)
                    )
                  ))
                (lsnew)
                )
              ))
            )))
          ))
        ))
        (setq updateautocompletesource (lambda (listscope charmap) (
          (let (
            writingstyle (ListScopeAnalysis.InnerWritingStyle listscope)
            items (LispList.Items (ListScopeAnalysis.SourceList listscope))
            firstitem (if (> (List<LispToken>.Count items) 0)
              (List<LispToken>.Item items 0)
              (lsnew)
              )
            firstitemsymb? (if (= firstitem ())
              (values false)
              (= (LispToken.Type firstitem) LispDataType.Symbol)
              )
            keywordval ()
            cursorpos (ConsoleLispEditor.CursorPosition editor)
            stringtokpair (stringtokfrompositioninlist items cursorpos charmap)
            stringtok? (> (lslen stringtokpair) 0)
            stringtok ()
            argindex ()
            keywordval ()
            stringargmetadata ()
            ;canautocomplete false
            ) (
              (if (and firstitemsymb? stringtok? (= writingstyle LispWritingStyle.SExpression))
                (
                  (setq stringtok (lsn stringtokpair 0))
                  (setq argindex (- (lsn stringtokpair 1) 1))
                  (setq keywordval (Scope.Get (ListScopeAnalysis.InnerBuiltScope listscope) (LispSymbol.Value firstitem)))
                  (if (= keywordval ())
                    (setq keywordval (Scope.Get (ListScopeAnalysis.InnerGlobalScope listscope) (LispSymbol.Value firstitem)))
                    ()
                    )
                  (if (= keywordval ())
                    ()
                    (if (or (= (LispToken.Type keywordval) LispDataType.Function) (= (LispToken.Type keywordval) LispDataType.Macro))
                      (if (< argindex (ArgumentDefinedLispRoutine.ArgumentCount keywordval))
                        (
                          (setq stringargmetadata (ArgumentDefinedMetadata.GetArgument (ArgumentDefinedLispRoutine.InstanceMetadata keywordval) argindex))
                          (if (MetadataAttributes.HasAttribute (ParamMetadataEntry.Attributes stringargmetadata) "fspath")
                            (let (
                              stringpos (SourceReference.Position (LispToken.SourceLocation stringtok))
                              posinescapedstring (- (- cursorpos stringpos) 1)
                              stringval (LispString.Value stringtok)
                              posinstring (escapedpostounescapedpos (txrepl stringval "\\" "\\\\") posinescapedstring)
                              textcut (if (> posinstring -1)
                                (txrang stringval 0 posinstring)
                                ()
                                )
                              ) (
                              (if (< posinstring 0)
                                (return-from updateautocompletesource)
                                ()
                                )
                              (if (= autocompletecache ())
                                (setq autocompletecache (AutocompleteSource+AutocompleteCache:CreatePathCache))
                                ()
                                )
                              (ConsoleLispEditor.AutocompleteSource editor (AutocompleteSource:FromFilesystemPath autocompletecache textcut))
                              (return-from updateautocompletesource)
                              ))
                            ()
                            )
                          )
                        ()
                        )
                      ()
                      )
                    )
                  )
                ()
                )
              (setq autocompletecache ())
            ))
          )))
      ))
      (tbsval pathautocomplete 'scriptinit (lambda (neweditor) (
        (setq editor neweditor)
        )))
      (tbsval pathautocomplete 'inputproc (lambda () (
        (let (
          sourceanalysis (ConsoleLispEditor.BufferAnalysis editor)
          charmap (SourceAnalysis.CharacterMap sourceanalysis)
          listscope (SourceAnalysis.SearchExpressionScopeData sourceanalysis (ConsoleLispEditor.CursorPosition editor))
          ) (
          (if (= listscope ())
            ()
            (updateautocompletesource listscope charmap)
            )
          ))
        )))

      (values pathautocomplete)
    ))
  ))
