(require list)
(require table)
(require text)

(let (
  math (require math)
  operators (tbnew)
  digits (tbnew)
  routines (tbnew)
  readtoken ()
  parseastree ()
  executetree ()
  ) (
  (tbsval operators "+" 0)
  (tbsval operators "-" 0)
  (tbsval operators "*" 1)
  (tbsval operators "/" 1)
  (tbsval operators "^" 2)

  (tbsval digits "." true)
  ((macro () (
    ((lambda (exprlist i) (
      (if (< i 10)
        (runitback (lspush exprlist (lsnew tbsval digits (txfromnum i) true)) (+ i 1))
        (values exprlist)
        )
      )) (lsnew) 0)
    ))) ; set digits from "0"-"9"

  (setq readtoken (lambda (str pos) (
    (let (
      resultstr ""
      class 'noclass
      newclass ()
      result (tbnew)
      ) (
      ((lambda (char) (
        (if (tbhaskey operators char)
          (setq newclass 'operator)
          (if (tbhaskey digits char)
            (setq newclass 'digits)
            (if (= char " ")
              (setq newclass 'whitespace)
              (setq newclass 'noclass)
              )
            )
          )
        (if (= newclass 'noclass)
          ()
          )
        )) (txrang str pos 1))
      ))
    )))
  ))
